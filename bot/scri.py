import asyncio
from datetime import datetime, time
import pytz
from telethon.sync import TelegramClient
from telethon.errors import ChatWriteForbiddenError, ChannelPrivateError, InviteRequestSentError, \
    UserAlreadyParticipantError, FloodWaitError, InviteHashExpiredError, InviteHashInvalidError
from telethon.tl.functions.channels import JoinChannelRequest
import json

from telethon.tl.functions.messages import ImportChatInviteRequest


with open('../accaunts.json', 'r', encoding='utf-8') as file:
    data = json.load(file)

account = data['myhambara']

API_ID = account['api_id']
API_HASH = account['api_hash']
SESSION_NAME = account['session_name']
GROUPS = account['groups']
MESSAGE = "–ê–Ω–∏–º–µ"
SCHEDULE_TIME = "15:30"
TIMEZONE = "Europe/Moscow"


async def join_groups(client):
    print("üîπ –ù–∞—á–∏–Ω–∞—é –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—ã...")

    for invite_link in GROUPS:
        try:
            # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ö—ç—à –∏–∑ —Å—Å—ã–ª–∫–∏
            invite_hash = invite_link.split("+")[-1]

            print(f"–ü—ã—Ç–∞—é—Å—å –≤—Å—Ç—É–ø–∏—Ç—å: {invite_link}")

            # –ü—Ä–æ–±—É–µ–º –≤—Å—Ç—É–ø–∏—Ç—å
            await client(ImportChatInviteRequest(invite_hash))
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –≤—Å—Ç—É–ø–∏–ª –≤ –≥—Ä—É–ø–ø—É: {invite_link}")

        except UserAlreadyParticipantError:
            print(f"‚ö†Ô∏è –£–∂–µ —Å–æ—Å—Ç–æ—é –≤ –≥—Ä—É–ø–ø–µ: {invite_link}")
        except InviteHashExpiredError:
            print(f"‚ùå –°—Å—ã–ª–∫–∞ —É—Å—Ç–∞—Ä–µ–ª–∞: {invite_link}")
        except InviteHashInvalidError:
            print(f"‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞: {invite_link}")
        except FloodWaitError as e:
            print(f"‚è≥ Telegram —Ç—Ä–µ–±—É–µ—Ç –ø–æ–¥–æ–∂–¥–∞—Ç—å {e.seconds} —Å–µ–∫—É–Ω–¥")
            await asyncio.sleep(e.seconds)
        except Exception as e:
            print(f"‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ —Å {invite_link}: {str(e)}")

        # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏
        await asyncio.sleep(10)


async def send_to_group(client, group):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É"""
    try:
        await client.send_message(group, MESSAGE)
        print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ {group}")
    except (ChatWriteForbiddenError, ChannelPrivateError):
        print(f"‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –≤ {group}")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ {group}: {str(e)}")


async def scheduled_mailing():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏"""
    client = TelegramClient(SESSION_NAME, API_ID, API_HASH)
    await client.start()

    # –°–Ω–∞—á–∞–ª–∞ –≤—Å—Ç—É–ø–∞–µ–º –≤–æ –≤—Å–µ –≥—Ä—É–ø–ø—ã
    await join_groups(client)

    print("\nüîπ –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞—Å—Å—ã–ª–∫–∏...")

    tz = pytz.timezone(TIMEZONE)
    target_time = datetime.strptime(SCHEDULE_TIME, "%H:%M").time()

    while True:
        now = datetime.now(tz).time()

        # –ï—Å–ª–∏ —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è >= –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞—Å—Å—ã–ª–∫–∏
        if now >= target_time:
            print("\nüîπ –ù–∞—á–∏–Ω–∞—é —Ä–∞—Å—Å—ã–ª–∫—É...")
            for group in GROUPS:
                await send_to_group(client, group)
                await asyncio.sleep(30)

            # –ñ–¥–µ–º 24 —á–∞—Å–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π —Ä–∞—Å—Å—ã–ª–∫–æ–π
            await asyncio.sleep(86400)
        else:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
            await asyncio.sleep(60)


if __name__ == "__main__":
    asyncio.run(scheduled_mailing())